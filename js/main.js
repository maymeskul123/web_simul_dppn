// –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
function updateUI() {
    if (!window.simulation) return;
    
    try {
        const stats = window.simulation.getStats();
        
        // –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        document.getElementById('statMonth').textContent = stats.month;
        document.getElementById('statResidents').textContent = stats.totalResidents;
        document.getElementById('statTotalPP').textContent = Math.round(stats.totalPP);
        document.getElementById('statAvgPP').textContent = Math.round(stats.averagePP);
        document.getElementById('statMoney').textContent = Math.round(stats.totalMoney);
        document.getElementById('statVotes').textContent = Math.round(stats.totalVotes);
        document.getElementById('statSocial').textContent = Math.round(stats.totalSocial);
        document.getElementById('statPublicFunds').textContent = Math.round(stats.publicFunds);
        
        document.getElementById('currentResidents').textContent = stats.totalResidents;
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ UI
        if (typeof updateResidentsList === 'function') updateResidentsList();
        if (typeof updateInfrastructureList === 'function') updateInfrastructureList();
        if (typeof updateInvestmentsList === 'function') updateInvestmentsList();
        if (typeof updateAnalytics === 'function') updateAnalytics();
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –∞–≤—Ç–æ-–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π
        const autoInvestBtn = document.getElementById('autoInvestBtn');
        if (autoInvestBtn) {
            if (stats.autoInvestEnabled) {
                autoInvestBtn.textContent = '‚úÖ –ê–≤—Ç–æ-–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏: –í–∫–ª';
                autoInvestBtn.className = 'success';
            } else {
                autoInvestBtn.textContent = 'üö´ –ê–≤—Ç–æ-–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏: –í—ã–∫–ª';
                autoInvestBtn.className = '';
            }
        }
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π
        const strategySelect = document.getElementById('investmentStrategy');
        if (strategySelect) {
            strategySelect.value = stats.investmentStrategy;
        }
        
        console.log('üîÑ UI –æ–±–Ω–æ–≤–ª–µ–Ω');
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI:', error);
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è HTML
function addResidents() {
    if (!window.simulation) {
        console.error('–°–∏–º—É–ª—è—Ü–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
        return;
    }
    
    const countInput = document.getElementById('residentCount');
    if (!countInput) {
        console.error('–ü–æ–ª–µ residentCount –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
        return;
    }
    
    const count = parseInt(countInput.value) || 1;
    const currentCount = window.simulation.residents.length;
    const newTotal = currentCount + count;
    
    if (newTotal > CONFIG.MAX_RESIDENTS) {
        alert(`–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∏—Ç–µ–ª–µ–π: ${CONFIG.MAX_RESIDENTS}`);
        return;
    }
    
    console.log(`üë• –î–æ–±–∞–≤–ª–µ–Ω–∏–µ ${count} –∂–∏—Ç–µ–ª–µ–π...`);
    window.simulation.addResidents(count);
    updateUI();
    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${count} –∂–∏—Ç–µ–ª–µ–π. –¢–µ–ø–µ—Ä—å: ${window.simulation.residents.length}`);
}

function removeResidents() {
    if (!window.simulation) return;
    
    const countInput = document.getElementById('residentCount');
    const count = parseInt(countInput.value) || 1;
    const currentCount = window.simulation.residents.length;
    const newTotal = currentCount - count;
    
    if (newTotal < CONFIG.MIN_RESIDENTS) {
        alert(`–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∏—Ç–µ–ª–µ–π: ${CONFIG.MIN_RESIDENTS}`);
        return;
    }
    
    console.log(`üë• –£–¥–∞–ª–µ–Ω–∏–µ ${count} –∂–∏—Ç–µ–ª–µ–π...`);
    window.simulation.removeResidents(count);
    updateUI();
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ ${count} –∂–∏—Ç–µ–ª–µ–π. –¢–µ–ø–µ—Ä—å: ${window.simulation.residents.length}`);
}

function simulateMonth() {
    if (!window.simulation) return;
    
    console.log('üìÖ –°–∏–º—É–ª—è—Ü–∏—è –º–µ—Å—è—Ü–∞...');
    window.simulation.simulateMonth();
    updateUI();
    console.log('‚úÖ –ú–µ—Å—è—Ü —Å–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω');
}

function autoConvert() {
    if (!window.simulation) return;
    
    console.log('üîÑ –ê–≤—Ç–æ-–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è...');
    const totalConverted = window.simulation.autoConvert();
    updateUI();
    console.log(`‚úÖ –ê–≤—Ç–æ-–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: ${Math.round(totalConverted)} –ü–ü`);
}

function startAutoSimulation() {
    if (!window.simulationInterval) {
        console.log('‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ-—Å–∏–º—É–ª—è—Ü–∏–∏...');
        window.simulationInterval = setInterval(() => {
            simulateMonth();
            if (Math.random() < 0.3) {
                autoConvert();
            }
        }, 2000);
    }
}

function stopAutoSimulation() {
    if (window.simulationInterval) {
        console.log('‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ-—Å–∏–º—É–ª—è—Ü–∏–∏...');
        clearInterval(window.simulationInterval);
        window.simulationInterval = null;
    }
}

function resetSimulation() {
    console.log('üóëÔ∏è –°–±—Ä–æ—Å —Å–∏–º—É–ª—è—Ü–∏–∏...');
    stopAutoSimulation();
    
    if (window.simulation) {
        window.simulation.reset();
        window.simulation.addResidents(CONFIG.DEFAULT_RESIDENTS);
        
        try {
            window.simulation.publicFunds = 3000;
            window.simulation.buildInfrastructure('SCHOOL');
            window.simulation.buildInfrastructure('HOSPITAL');
        } catch (e) {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤—É—é –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É:', e.message);
        }
        
        updateUI();
    }
    console.log('‚úÖ –°–∏–º—É–ª—è—Ü–∏—è —Å–±—Ä–æ—à–µ–Ω–∞');
}

function updateCoefficients() {
    if (!window.simulation) return;
    
    const newConfig = {
        BASE_PP_PER_MONTH: parseInt(document.getElementById('basePP').value) || 100,
        VOLUNTEER_PP_BONUS: parseInt(document.getElementById('volunteerBonus').value) || 50,
        EDUCATION_PP_BONUS: parseInt(document.getElementById('educationBonus').value) || 30,
        MAX_MONEY_CONVERSION: (parseInt(document.getElementById('moneyLimit').value) || 30) / 100
    };
    
    window.simulation.updateConfig(newConfig);
    updateUI();
    
    alert('‚úÖ –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
    console.log('‚öôÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω—ã –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã:', newConfig);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è DPPN —Å–∏–º—É–ª—è—Ç–æ—Ä–∞...');
    
    try {
        // –°–æ–∑–¥–∞–µ–º —Å–∏–º—É–ª—è—Ü–∏—é –∫–∞–∫ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        window.simulation = new DPPSimulation();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∂–∏—Ç–µ–ª–µ–π
        window.simulation.addResidents(CONFIG.DEFAULT_RESIDENTS);
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É
        try {
            window.simulation.publicFunds = 3000;
            window.simulation.buildInfrastructure('SCHOOL');
            window.simulation.buildInfrastructure('HOSPITAL');
        } catch (e) {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤—É—é –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É:', e.message);
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        if (typeof initTabs === 'function') initTabs();
        updateUI();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        setupGlobalHandlers();
        
        console.log('‚úÖ DPPN —Å–∏–º—É–ª—è—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!');
        console.log('üìä –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', window.simulation.getStats());
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
        alert('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–∏–º—É–ª—è—Ç–æ—Ä–∞: ' + error.message);
    }
});

function setupGlobalHandlers() {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è Enter –≤ –ø–æ–ª–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∂–∏—Ç–µ–ª–µ–π
    const residentCountInput = document.getElementById('residentCount');
    if (residentCountInput) {
        residentCountInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                addResidents();
            }
        });
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∂–∏—Ç–µ–ª–µ–π (–∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π)
    const searchInput = document.getElementById('searchResident');
    if (searchInput) {
        searchInput.addEventListener('input', function() {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º
            if (typeof searchResidents === 'function') {
                searchResidents();
            }
        });
    }
    
    console.log('üéØ –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
}

console.log('üìÅ –í—Å–µ –º–æ–¥—É–ª–∏ DPPN —Å–∏–º—É–ª—è—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');