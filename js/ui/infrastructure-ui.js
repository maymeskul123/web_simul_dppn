// UI –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
function updateInfrastructureList() {
    if (!window.simulation) return;
    
    const container = document.getElementById('infrastructureContainer');
    if (!container) return;
    
    container.innerHTML = '';
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    updateInfrastructureStats();
    
    window.simulation.infrastructure.forEach(infra => {
        const data = infra.getDisplayData();
        const card = document.createElement('div');
        card.className = 'infrastructure-card';
        
        // –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        let specificInfo = '';
        switch(data.category) {
            case 'energy':
                specificInfo = `<div>‚ö° –í—ã—Ä–∞–±–æ—Ç–∫–∞ —ç–Ω–µ—Ä–≥–∏–∏: ${data.energyOutput} –µ–¥.</div>`;
                break;
            case 'agriculture':
                specificInfo = `<div>üåæ –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –µ–¥—ã: ${data.foodOutput} –µ–¥.</div>`;
                break;
            case 'industry':
                specificInfo = `<div>üè≠ –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ: ${data.productionOutput} –µ–¥.</div>`;
                if (data.innovationOutput > 0) {
                    specificInfo += `<div>üî¨ –ò–Ω–Ω–æ–≤–∞—Ü–∏–∏: ${data.innovationOutput} –µ–¥.</div>`;
                }
                break;
        }
        
        card.innerHTML = `
            <div class="card-header">
                <div class="card-title">${data.icon} ${data.name}</div>
                <div class="level-badge">–£—Ä. ${data.level}</div>
            </div>
            <div class="resident-details">
                <div>${data.description}</div>
                <div>üèóÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ: ${data.condition}%</div>
                <div class="progress-bar">
                    <div class="progress-fill" style="width: ${data.condition}%"></div>
                </div>
                <div>‚ö° –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${data.efficiency}%</div>
                <div class="progress-bar">
                    <div class="progress-fill" style="width: ${data.efficiency}%"></div>
                </div>
                <div>üìà –≠—Ñ—Ñ–µ–∫—Ç: +${data.effectValue}% –∫ ${getEffectName(data.effect)}</div>
                ${specificInfo}
                <div>üí∞ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ: ${data.maintenanceCost} –ü–ü/–º–µ—Å</div>
                <div class="investment-controls">
                    <button onclick="upgradeInfrastructure('${infra.id}')" class="success">‚¨ÜÔ∏è –£–ª—É—á—à–∏—Ç—å (${data.upgradeCost} –ü–ü)</button>
                    <button onclick="repairInfrastructure('${infra.id}')" class="warning">üîß –†–µ–º–æ–Ω—Ç (${Math.round(data.maintenanceCost * 2)} –ü–ü)</button>
                </div>
            </div>
        `;
        container.appendChild(card);
    });
    
    console.log(`üè¢ –û–±–Ω–æ–≤–ª–µ–Ω —Å–ø–∏—Å–æ–∫ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã: ${window.simulation.infrastructure.length} –æ–±—ä–µ–∫—Ç–æ–≤`);
}

function updateInfrastructureStats() {
    if (!window.simulation) return;
    
    const stats = window.simulation.getStats();
    const levels = stats.infrastructureLevels;
    
    // –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    document.getElementById('statInfrastructure').textContent = window.simulation.infrastructure.length;
    document.getElementById('statInfraLevel').textContent = stats.infrastructureLevel;
    document.getElementById('statInfraEfficiency').textContent = Math.round(stats.infrastructureEfficiency);
    
    // –†–∞—Å—á–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ —ç–Ω–µ—Ä–≥–∏–∏ –∏ –µ–¥—ã
    const totalEnergy = window.simulation.infrastructure.reduce((sum, infra) => sum + infra.getEnergyOutput(), 0);
    const totalFood = window.simulation.infrastructure.reduce((sum, infra) => sum + infra.getFoodOutput(), 0);
    const totalProduction = window.simulation.infrastructure.reduce((sum, infra) => sum + infra.getProductionOutput(), 0);
    
    // –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º
    const schools = window.simulation.infrastructure.filter(i => i.type === 'SCHOOL' || i.type === 'UNIVERSITY');
    const hospitals = window.simulation.infrastructure.filter(i => i.type === 'HOSPITAL' || i.type === 'CLINIC');
    const transport = window.simulation.infrastructure.filter(i => i.type === 'TRANSPORT' || i.type === 'METRO');
    const energy = window.simulation.infrastructure.filter(i => i.category === 'energy');
    const agriculture = window.simulation.infrastructure.filter(i => i.category === 'agriculture');
    const industry = window.simulation.infrastructure.filter(i => i.category === 'industry');
    
    document.getElementById('infraEducationLevel').textContent = Math.round(levels.education || 0);
    document.getElementById('infraSchoolsCount').textContent = schools.length;
    document.getElementById('infraEducationBonus').textContent = Math.round((levels.education || 0) * 10);
    
    document.getElementById('infraHealthLevel').textContent = Math.round(levels.healthcare || 0);
    document.getElementById('infraHospitalsCount').textContent = hospitals.length;
    document.getElementById('infraHealthBonus').textContent = Math.round((levels.healthcare || 0) * 10);
    
    document.getElementById('infraTransportLevel').textContent = Math.round(levels.mobility || 0);
    document.getElementById('infraTransportCount').textContent = transport.length;
    document.getElementById('infraTransportBonus').textContent = Math.round((levels.mobility || 0) * 10);
    
    document.getElementById('infraEnergyLevel').textContent = Math.round(totalEnergy / 100);
    document.getElementById('infraEnergyCount').textContent = energy.length;
    document.getElementById('infraEnergyBonus').textContent = Math.round(totalEnergy);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    document.getElementById('statEducation').textContent = Math.round(levels.education || 0);
    document.getElementById('statHealthcare').textContent = Math.round(levels.healthcare || 0);
}

function getEffectName(effect) {
    const effects = {
        'education': '–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—é',
        'healthcare': '–∑–¥–æ—Ä–æ–≤—å—é',
        'mobility': '–º–æ–±–∏–ª—å–Ω–æ—Å—Ç–∏',
        'energy': '—ç–Ω–µ—Ä–≥–∏–∏',
        'food': '–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É –µ–¥—ã',
        'production': '–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É',
        'innovation': '–∏–Ω–Ω–æ–≤–∞—Ü–∏—è–º'
    };
    return effects[effect] || effect;
}